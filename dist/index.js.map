{"version":3,"file":"index.js","sources":["../src/attributeTypes.ts","../src/makeCustomElement.ts","../src/register.ts","../src/instantiateStyleSheet.ts"],"sourcesContent":["import type { AttributeValue } from \"./makeCustomElement\";\n\nexport const boolean = (val: AttributeValue): boolean => (\n  (val && val !== \"false\" && val !== \"0\") || val === \"\"\n);\n\nexport const string = (val: AttributeValue): string => (\n  val == null ? \"\" : val.toString()\n);\n\nexport const maybeNumber = (val: AttributeValue): number | undefined => (\n  typeof val === \"number\" ? (\n    val\n  ) : val == null || val === \"\" ? (\n    undefined\n  ) : typeof val === \"string\" ? (\n    Number(val)\n  ) : (\n    Number.NaN\n  )\n);\n\nexport const number = (n: number) => (\n  (val: AttributeValue) => maybeNumber(val) ?? n\n);\n\nexport const stringList = (val: AttributeValue): string[] => (\n  val == null || val === \"\" ? (\n    []\n  ) : typeof val === \"string\" ? (\n    // non-empty string\n    val.split(\",\")\n  ) : (\n    // boolean or number\n    [val.toString()]\n  )\n);\n\nexport const numberList = (val: AttributeValue): number[] => {\n  const list = stringList(val);\n  return list.map(str => str === \"\" ? Number.NaN : Number(str));\n};\n\nexport const raw = (val: AttributeValue): AttributeValue => (\n  val\n);\n\nexport const maybeKeyword = <Key>(items: Key[]) => {\n  return (val: AttributeValue): Key | undefined => {\n    const string = val?.toString() ?? \"\";\n    return items.find(item => item === string) ?? undefined;\n  };\n};\n\nexport const keyword = <Key>(deflt: Key, others: Key[]) => {\n  const find = maybeKeyword(others);\n  return (val: AttributeValue): Key => find(val) ?? deflt;\n};\n\nexport const maybeKeywordOrNumber = <Key>(others: Key[]) => {\n  const find = maybeKeyword(others);\n  return (val: AttributeValue): Key | number | undefined => find(val) ?? maybeNumber(val);\n};\n\nexport const keywordOrNumber = <Key>(deflt: Key | number, others: Key[] = []) => {\n  const find = maybeKeywordOrNumber([deflt, ...others]);\n  return (val: AttributeValue): Key | number => find(val) ?? deflt;\n};\n","import {\n  h,\n  cloneElement,\n  render,\n  type FunctionComponent,\n  type ComponentClass,\n  type FunctionalComponent,\n  type VNode,\n} from \"preact\";\n\nexport type AttributeValue = null | string | boolean | number;\nexport type SignalLike<T> = { value: T };\n\n// ----\n\nexport type PreactComponent =\n  FunctionComponent<any> |\n  ComponentClass<any> |\n  FunctionalComponent<any>;\n\ntype AttributeConfig<T> = {\n  name: string,\n  type: (value: AttributeValue) => T,\n};\ntype PropertyConfig<T> = (\n  { name: string, formAssociated?: boolean }\n) & (\n  { attribute: AttributeConfig<T> } | { initialValue: T }\n);\n\nexport type Options = {\n  adoptedStyleSheets?: (CSSStyleSheet | null)[],\n  slots?: string[],\n  properties?: PropertyConfig<any>[],\n};\n\ntype InternalProp<T> = { _dirty: boolean, _value: T, value: T };\n\n// ----\n\nconst Slot = (props: { name?: string }) => (\n  h(\"slot\", props)\n);\n\n// Sanitize any value to FormValue\nconst serializeFormValue = (value: any): string | FormData => {\n  if (value == null) {\n    return \"\";\n  }\n  if (typeof value === \"boolean\") {\n    return value ? \"1\" : \"0\";\n  }\n  // string or number\n  if (typeof value !== \"object\") {\n    return value.toString();\n  }\n  if (Array.isArray(value)) {\n    value.map(item => item.toString().replaceAll(\",\", \"\\\\,\")).join(\",\");\n  }\n  // valueType must be \"object\" here\n  const fields = Object.keys(value);\n  const formData = new FormData();\n  for (const field of fields) {\n    formData.append(field, value[field].toString());\n  }\n  return formData;\n}\n\nexport const makeCustomElement = (\n  Component: PreactComponent,\n  options?: Options,\n) => {\n  const properties = options?.properties ?? [];\n  const slots = options?.slots ?? [];\n  const sheets = options?.adoptedStyleSheets?.filter(s => !!s) ?? [];\n  const attributes = Object.fromEntries(\n    properties.filter(prop => \"attribute\" in prop).map(prop => (\n      [prop.attribute.name, { prop: prop.name, parser: prop.attribute.type }]\n    )),\n  );\n  const observedAttributes = Object.keys(attributes);\n  const formAssociatedField = properties.find(prop => prop.formAssociated)?.name;\n\n  class CustomElement extends HTMLElement {\n    static observedAttributes = observedAttributes;\n    static formAssociated = !!formAssociatedField;\n    _root: ShadowRoot;\n    _vdom: VNode | null = null;\n    _internals: ElementInternals | null;\n    _props: Record<string, InternalProp<any>>;\n    _frameRequested = false;\n\n    constructor () {\n      super();\n      // This library assumes that the ShadowDOM feature is always enabled\n      this._root = this.attachShadow({ mode: \"open\" });\n      this._root.adoptedStyleSheets = sheets;\n      this._vdom = null as (VNode | null);\n      this._internals = formAssociatedField ? this.attachInternals() : null;\n      const el = this;\n      this._props = Object.fromEntries(\n        properties.map(prop => {\n          const initialValue = \"initialValue\" in prop ? (\n            prop.initialValue\n          ) : (\n            this.parseAttribute(prop.attribute)\n          );\n          return [prop.name, {\n            _dirty: false,\n            _value: initialValue,\n            get value () { return this._value; },\n            set value (value: any) { el.setProp(prop.name, value, true); },\n          }];\n        })\n      );\n    }\n\n    parseAttribute <T>(attribute: AttributeConfig<T>) {\n      return attribute.type(this.getAttribute(attribute.name));\n    }\n\n    setProp (name: string, value: any, markAsDirty: boolean) {\n      if (this._props[name]._value !== value) {\n        this._props[name]._value = value;\n        if (markAsDirty) {\n          this._props[name]._dirty = true;\n        }\n        if (formAssociatedField === name && this._internals) {\n          this._internals.setFormValue(serializeFormValue(value));\n        }\n        this.rerender();\n      }\n    }\n\n    rerender () {\n      if (!this._frameRequested) {\n        requestAnimationFrame(() => {\n          if (this._vdom) {\n            this._frameRequested = false;\n            this._vdom = cloneElement(this._vdom, this._props);\n            render(this._vdom, this._root);\n          }\n        });\n      }\n    }\n\n    connectedCallback () {\n      const vSlots: Record<string, VNode<any>> = Object.fromEntries(\n        slots.map(slot => [slot, h(Slot, { name: slot }, null)]),\n      );\n      const props = { $el: this, ...this._props, ...vSlots };\n      this._vdom = h(Component, props, h(Slot, { name: undefined }, null));\n      render(this._vdom, this._root);\n    }\n\n    disconnectedCallback () {\n      this._vdom = null;\n      render(null, this._root);\n    }\n\n    attributeChangedCallback (name: string, _: AttributeValue, newValue: AttributeValue) {\n      const { parser, prop } = attributes[name];\n      if (!this._props[prop]._dirty) {\n        this.setProp(prop, parser(newValue), false);\n      }\n    }\n  }\n\n  for (const prop of properties) {\n    Object.defineProperty(CustomElement.prototype, prop.name, {\n      get () {\n        return this._props[prop.name]._value;\n      },\n      set (value: any) {\n        this.setProp(prop.name, value, true);\n      },\n    });\n  }\n\n  return CustomElement;\n};\n","import { makeCustomElement, type PreactComponent, type Options } from \"./makeCustomElement\";\n\nexport const register = (\n  Component: PreactComponent,\n  tagName: string,\n  options?: Options,\n) => {\n  const element = makeCustomElement(Component, options);\n  return customElements.define(tagName, element);\n};\n","export const instantiateStyleSheet = (...styles: string[]) => {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n  const sheet = new CSSStyleSheet();\n  sheet.replaceSync(styles.join(\"\"));\n  return sheet;\n}\n"],"names":["boolean","val","string","maybeNumber","number","n","stringList","numberList","str","raw","maybeKeyword","items","item","keyword","deflt","others","find","maybeKeywordOrNumber","keywordOrNumber","Slot","props","h","serializeFormValue","value","fields","formData","field","makeCustomElement","Component","options","properties","slots","sheets","_a","s","attributes","prop","observedAttributes","formAssociatedField","_b","CustomElement","__publicField","el","initialValue","attribute","name","markAsDirty","cloneElement","render","vSlots","slot","_","newValue","parser","register","tagName","element","instantiateStyleSheet","styles","sheet"],"mappings":"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"}