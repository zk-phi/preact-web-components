{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  h,\n  cloneElement,\n  render,\n  hydrate,\n  type FunctionComponent,\n  type ComponentClass,\n  type FunctionalComponent,\n  type VNode,\n} from \"preact\";\n\nexport type AttributeValue = null | string | boolean | number;\nexport type SignalLike<T> = { value: T };\n\n// ----\n\ntype PreactComponent =\n  FunctionComponent<any> |\n  ComponentClass<any> |\n  FunctionalComponent<any>;\n\ntype AttributeConfig<T> = {\n  name: string,\n  type: (value: AttributeValue) => T,\n};\ntype PropertyConfig<T> = (\n  { name: string, formAssociated?: boolean }\n) & (\n  { attribute: AttributeConfig<T> } | { initialValue: T }\n);\n\ntype Options = {\n  adoptedStyleSheets?: CSSStyleSheet[],\n  slots?: string[],\n  properties?: PropertyConfig<any>[],\n};\n\ntype InternalProp<T> = { _dirty: boolean, _value: T, value: T };\n\n// ----\n\nconst Slot = (props: { name?: string }) => (\n  h(\"slot\", props)\n);\n\n// Sanitize any value to FormValue\nconst serializeFormValue = (value: any): string | FormData => {\n  if (value == null) {\n    return \"\";\n  }\n  if (typeof value !== \"object\") {\n    return value.toString();\n  }\n  if (Array.isArray(value)) {\n    value.map(item => item.toString().replaceAll(\",\", \"\\\\,\")).join(\",\");\n  }\n  // valueType must be \"object\" here\n  const fields = Object.keys(value);\n  const formData = new FormData();\n  fields.forEach(field => {\n    formData.append(field, value[field].toString());\n  });\n  return formData;\n}\n\nexport const makeCustomElement = (\n  Component: PreactComponent,\n  options?: Options,\n) => {\n  const properties = options?.properties ?? [];\n  const slots = options?.slots ?? [];\n  const sheets = options?.adoptedStyleSheets ?? [];\n  const attributes = Object.fromEntries(\n    properties.filter(prop => \"attribute\" in prop).map(prop => (\n      [prop.attribute.name, { prop: prop.name, parser: prop.attribute.type }]\n    )),\n  );\n  const observedAttributes = Object.keys(attributes);\n  const formAssociatedField = properties.find(prop => prop.formAssociated)?.name;\n\n  class CustomElement extends HTMLElement {\n    static observedAttributes = observedAttributes;\n    static formAssociated = !!formAssociatedField;\n    _root: ShadowRoot;\n    _vdom: VNode | null = null;\n    _internals: ElementInternals | null;\n    _props: Record<string, InternalProp<any>>;\n    _frameRequested = false;\n\n    constructor () {\n      super();\n      // This library assumes that the ShadowDOM feature is always enabled\n      this._root = this.attachShadow({ mode: \"open\" });\n      this._root.adoptedStyleSheets = sheets;\n      this._vdom = null as (VNode | null);\n      this._internals = formAssociatedField ? this.attachInternals() : null;\n      const el = this;\n      this._props = Object.fromEntries(\n        properties.map(prop => {\n          const initialValue = \"initialValue\" in prop ? (\n            prop.initialValue\n          ) : (\n            this.parseAttribute(prop.attribute)\n          );\n          return [prop.name, {\n            _dirty: false,\n            _value: initialValue,\n            get value () { return this._value; },\n            set value (value: any) { el.setProp(prop.name, value, true); },\n          }];\n        })\n      );\n    }\n\n    parseAttribute <T>(attribute: AttributeConfig<T>) {\n      return attribute.type(this.getAttribute(attribute.name));\n    }\n\n    setProp (name: string, value: any, markAsDirty: boolean) {\n      if (this._props[name]._value !== value) {\n        this._props[name]._value = value;\n        if (markAsDirty) {\n          this._props[name]._dirty = true;\n        }\n        if (formAssociatedField === name && this._internals) {\n          this._internals.setFormValue(serializeFormValue(value));\n        }\n        this.rerender();\n      }\n    }\n\n    rerender () {\n      if (!this._frameRequested) {\n        requestAnimationFrame(() => {\n          if (this._vdom) {\n            this._frameRequested = false;\n            this._vdom = cloneElement(this._vdom, this._props);\n            render(this._vdom, this._root);\n          }\n        });\n      }\n    }\n\n    connectedCallback () {\n      const vSlots: Record<string, VNode<any>> = Object.fromEntries(\n        slots.map(slot => [slot, h(Slot, { name: slot }, null)]),\n      );\n      const props = { $el: this, ...this._props, ...vSlots };\n      this._vdom = h(Component, props, h(Slot, { name: undefined }, null));\n      // TODO: I don't know how this works (just copy-pasted from preact-custom-component)\n      (this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root);\n    }\n\n    disconnectedCallback () {\n      this._vdom = null;\n      render(null, this._root);\n    }\n\n    attributeChangedCallback (name: string, _: AttributeValue, newValue: AttributeValue) {\n      const { parser, prop } = attributes[name];\n      if (!this._props[prop]._dirty) {\n        this.setProp(prop, parser(newValue), false);\n      }\n    }\n  }\n\n  properties.forEach(prop => (\n    Object.defineProperty(CustomElement.prototype, prop.name, {\n      get () {\n        return this._props[prop.name]._value;\n      },\n      set (value: any) {\n        this.setProp(prop.name, value, true);\n      },\n    })\n  ));\n\n  return CustomElement;\n};\n\nexport const register = (\n  Component: PreactComponent,\n  tagName: string,\n  options?: Options,\n) => {\n  const element = makeCustomElement(Component, options);\n  return customElements.define(tagName, element);\n};\n"],"names":["Slot","props","h","serializeFormValue","value","item","fields","formData","field","makeCustomElement","Component","options","properties","slots","sheets","attributes","prop","observedAttributes","formAssociatedField","_a","CustomElement","__publicField","el","initialValue","attribute","name","markAsDirty","cloneElement","render","vSlots","slot","hydrate","_","newValue","parser","register","tagName","element"],"mappings":"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"}